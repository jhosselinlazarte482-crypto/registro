Aplicacion Web Con El Lenguaje de 
Programacion PHP, Para El Registro De
Mensualidades ‚Äì Unidad Educativa Campo Rosso

üßæ Descripci√≥n del Proyecto 

El proyecto ‚ÄúDesarrollo de una aplicaci√≥n web con 
el lenguaje de programaci√≥n PHP para el registro de
mensualidades en la Unidad Educativa Campo Rosso‚Äù
tiene como objetivo principal digitalizar y automatizar 
el proceso de control y registro de pagos escolares
que actualmente se realiza de forma manual por la
junta escolar.
En la instituci√≥n, los pagos de mensualidades 
se registran tradicionalmente en hojas o cuadernos,
lo que genera errores frecuentes, p√©rdida de informaci√≥n 
y dificultad para realizar reportes. Este proyecto surge
como una soluci√≥n tecnol√≥gica que busca modernizar la
gesti√≥n administrativa, mejorar la organizaci√≥n y
garantizar la seguridad de los datos.
La aplicaci√≥n fue desarrollada utilizando el lenguaje 
PHP y la base de datos MySQL, ejecut√°ndose en el entorno local
mediante XAMPP. El sistema permite que el administrador registre
estudiantes, controle los pagos realizados, genere reportes y
mantenga actualizada la informaci√≥n. A su vez, los estudiantes o
padres pueden consultar el estado de sus pagos, lo que promueve la
transparencia y comunicaci√≥n con la instituci√≥n.
üéØ Objetivo del Software
Desarrollar una aplicaci√≥n web segura, pr√°ctica y confiable que
permita registrar, controlar y consultar los pagos mensuales de
los estudiantes en la Unidad Educativa Campo Rosso, reemplazando 
el sistema manual de la junta escolar y optimizando la gesti√≥n
administrativa.

‚öô Tecnolog√≠as Utilizadas

Lenguaje de programaci√≥n: PHP

Base de datos: MySQL

Entorno de desarrollo: XAMPP

Frontend: HTML, CSS, JavaScript

Servidor local: Apache

Herramientas de dise√±o: Draw.io
(para diagramas), Figma (interfaz visual)

Control de versiones: Git y GitHub

üë©‚Äçüíª Autores / Integrantes

Jhosselin Lazarte Tribe√±o
Kenia Mariana Chavez

Unidad Educativa Campo Rosso ‚Äî 6to B.T.H. Inform√°tica
‚úÖ Requerimientos Funcionales

1. El sistema debe permitir registrar nuevos estudiantes con sus datos personales (nombre, curso, n√∫mero de matr√≠cula).

2. El administrador podr√° registrar los pagos mensuales de cada estudiante.
3. El sistema debe mostrar el estado del pago (pendiente, cancelado, parcial).
4. Debe permitir consultar, modificar o eliminar registros de estudiantes y pagos.
5. El sistema debe generar reportes mensuales o por estudiante.
6. El sistema permitir√° iniciar sesi√≥n como administrador.
7. Los estudiantes podr√°n consultar su historial de pagos de forma r√°pida.
8. El sistema debe validar la informaci√≥n ingresada para evitar errores.
9. El sistema debe guardar todos los registros en la base de datos MySQL.

üîí Requerimientos No Funcionales

1. Seguridad: Solo el administrador podr√° modificar registros o acceder a informaci√≥n confidencial.
2. Usabilidad: La interfaz debe ser sencilla, clara y f√°cil de usar por cualquier usuario.
3. Eficiencia: El sistema debe procesar y mostrar la informaci√≥n r√°pidamente.
4. Compatibilidad: El sistema debe funcionar en navegadores modernos como Chrome o Firefox.
5. Mantenibilidad: El c√≥digo debe estar bien estructurado para facilitar futuras mejoras.
6. Confiabilidad: La aplicaci√≥n debe mantener la integridad de los datos ante posibles fallos.
7. Escalabilidad: El sistema debe poder ampliarse con nuevas funciones (por ejemplo, notificaciones).
8. Disponibilidad: El sistema debe estar accesible desde la red local de la instituci√≥n.

üß© Instrucciones de Uso o Prueba

1. Instalar XAMPP en el equipo.
2. Colocar la carpeta del proyecto dentro del directorio:
C:\xampp\htdocs\camporosso
3. Iniciar los m√≥dulos Apache y MySQL desde el panel de control de XAMPP.
4. Acceder a phpMyAdmin y crear la base de datos llamada mensualidades.
5. Importar el archivo SQL del proyecto (estructura y datos iniciales).
6. Abrir el navegador y escribir en la barra de direcciones:
http://localhost/camporosso/index.php
7. Iniciar sesi√≥n como administrador y realizar pruebas de registro, consulta y modificaci√≥n.


